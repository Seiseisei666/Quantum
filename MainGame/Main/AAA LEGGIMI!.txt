LINEE GUIDA

- Un file per classe, a meno che davvero non siano proprio cose minime

- Il modo migliore di mettere gli enum, a quanto pare, è nello stesso file della classe che li usa di più o che vi è più vicina come concetto

- Struttura delle classi: ognuno ha la sua in realtà, però ora sto usando questa:

1) Costruttori

2) Proprietà e metodi pubblici
	Iniziali maiuscole (MetodoQweQweQwe, ProprietàStocazzo)

3) Proprietà e metodi protetti
	Ce ne abbiamo pochissimi

4) Proprietà e metodi privati
	perlopiù minuscole (metodoQweqweqwe, proprietàStocazzo)

5) come ultima cosa i Campi della classe
	underscore ( _campoQweqweqwe), se oggetti complessi tutto sommato va bene pure senza (oggettoPrivato).
	Per le variabili che possono essere lette da altre parti del codice è consigliato memorizzarle in un campo privato e implementare una proprietà che la legge
	ad esempio: 
	private string _campoQweqweqwe;
	public string CampoQweqweqwe {get {return _campoQweqweqwe; } }

- E' buona norma essere il meno liberali possibile con gli accessori! 
Idealmente le classi dovrebbero avere pochi membri pubblici, ben comprensibili e con nomi sensati (niente abbreviazioni esoteriche)
Le proprietà con accessori automatici (tipo: {get; set;} ) è meglio evitarle; 
una cosa tipo {get; private set; } già è molto meglio

- scrivendo /// Visual studio introduce automaticamente il Summary, che è un commento che viene interpretato come metadata di una classe o membro di classe
Se si scrivono cose strambe e/o lunghe è una buona idea scrivere 2 righe, così basta tenere il mouse sopra il nome dell'elemento e si visualizza il popup con le informazioni


asdfdsgadsgdfgs vi committo la madonna